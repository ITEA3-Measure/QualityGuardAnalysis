<%#
 Copyright 2013-2018 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see http://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
---
apiVersion: v1
kind: Secret
metadata:
  name: ds-secret-ref
  namespace: <%= kubernetesNamespace %>
stringData:
  database-admin-user: "admin"
  database-admin-password: "password"

---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: <%= app.baseName.toLowerCase() %>-couchbase
  namespace: <%= kubernetesNamespace %>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <%= app.baseName.toLowerCase() %>-couchbase
  template:
    metadata:
      labels:
        app: <%= app.baseName.toLowerCase() %>-couchbase
    spec:
      containers:
      - name: <%= app.baseName.toLowerCase() %>-couchbase
        image: <%= DOCKER_COUCHBASE %>
        env:
        - name: APPLICATION_NAME
          value: <%= app.baseName.toLowerCase() %>-couchbase
        - name: BUCKET
          value: <%= app.baseName.toLowerCase() %>
        - name: COUCHBASE_DATABASE
          value: <%= app.baseName.toLowerCase() %>
        - name: COUCHBASE_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: ds-secret-ref
              key: database-admin-user
        - name: COUCHBASE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ds-secret-ref
              key: database-admin-password
        ports:
        - containerPort: 8091
          protocol: TCP
        - containerPort: 8092
          protocol: TCP
        - containerPort: 8093
          protocol: TCP
        - containerPort: 11210
          protocol: TCP
        command:
            - "/bin/bash"
            - "-ec"
            - |
                set -x
                set -m
                /entrypoint.sh couchbase-server &

                echo "waiting for http://${APPLICATION_NAME}:8091/ui/index.html"
                while [ "$(curl -Isw '%{http_code}' -o /dev/null http://${APPLICATION_NAME}:8091/ui/index.html#/)" != 200 ]
                do
                    sleep 5
                done

                echo "Setup index and memory quota"
                curl -X POST http://${APPLICATION_NAME}:8091/pools/default -d memoryQuota=300 -d indexMemoryQuota=300

                echo "Setup services"
                curl http://${APPLICATION_NAME}:8091/node/controller/setupServices -d services=kv%2Cn1ql%2Cindex

                echo "Setup credentials"
                curl http://${APPLICATION_NAME}:8091/settings/web -d port=8091 -d username=${COUCHBASE_ADMIN_USER} -d password=${COUCHBASE_ADMIN_PASSWORD}

                echo "Setup Memory Optimized Indexes"
                curl -u ${COUCHBASE_ADMIN_USER}:${COUCHBASE_ADMIN_PASSWORD} -X POST http://${APPLICATION_NAME}:8091/settings/indexes -d 'storageMode=memory_optimized'

                echo "Setup bucket $BUCKET"
                curl -u ${COUCHBASE_ADMIN_USER}:${COUCHBASE_ADMIN_PASSWORD} -X POST http://${APPLICATION_NAME}:8091/pools/default/buckets -d name=${BUCKET} -d bucketType=couchbase -d ramQuotaMB=300 -dauthType=sasl
                fg

        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 15
          httpGet:
            path: /ui/index.html
            port: 8091
            scheme: HTTP
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          httpGet:
            path: /ui/index.html
            port: 8091
            scheme: HTTP
        volumeMounts:
        - name: <%= app.baseName.toLowerCase() %>-couchbase-data
          mountPath: /opt/couchbase/var/lib/couchbase/data/
        resources:
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: <%= app.baseName.toLowerCase() %>-couchbase-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: <%= app.baseName.toLowerCase() %>-couchbase
  namespace: <%= kubernetesNamespace %>
  labels:
    app: <%= app.baseName.toLowerCase() %>-couchbase
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    -
      name: couchbase-8091
      protocol: TCP
      port: 8091
      targetPort: 8091
    -
      name: couchbase-8092
      protocol: TCP
      port: 8092
      targetPort: 8092
    -
      name: couchbase-8093
      protocol: TCP
      port: 8093
      targetPort: 8093
    -
      name: couchbase-11210
      protocol: TCP
      port: 11210
      targetPort: 11210
  clusterIP: None
  selector:
    app: <%= app.baseName.toLowerCase() %>-couchbase
