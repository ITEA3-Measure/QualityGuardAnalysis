{"version":3,"file":"datepicker-navigation.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-navigation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,uBAAuB,EAAC,MAAM,eAAe,CAAC;AAC9F,OAAO,EAAC,eAAe,EAAC,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAC,OAAO,EAAC,MAAM,YAAY,CAAC;AACnC,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAC,WAAW,EAAC,MAAM,gBAAgB,CAAC;;IA+DzC,iCAAmB,IAAuB,EAAU,SAAsB;QAAvD,SAAI,GAAJ,IAAI,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAa;0BAb7D,eAAe;wBAUP,IAAI,YAAY,EAAmB;sBACrC,IAAI,YAAY,EAAW;KAEgC;IAE9E,4CAAU,GAAV,UAAW,KAAsB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAEjE,8CAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KACtG;IAED,8CAAY,GAAZ;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACrH;IAED,4CAAU,GAAV,UAAW,IAAa,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;;gBA1EtD,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE,EAAC,OAAO,EAAE,gCAAgC,EAAE,mBAAmB,EAAE,aAAa,EAAC;oBACrF,MAAM,EAAE,CAAC,6qBA0BR,CAAC;oBACF,QAAQ,EAAE,svBAcT;iBACF;;;;gBAjDO,iBAAiB;gBACjB,WAAW;;;yBAoDhB,KAAK;6BACL,KAAK;4BACL,KAAK;4BACL,KAAK;2BACL,KAAK;+BACL,KAAK;oCACL,KAAK;6BAEL,MAAM;2BACN,MAAM;;kCAjET;;SAqDa,uBAAuB","sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'd-flex justify-content-between', '[class.collapsed]': '!showSelect'},\n  styles: [`\n    :host {\n      height: 2rem;\n      line-height: 1.85rem;\n    }\n    :host.collapsed {\n      margin-bottom: -2rem;\n    }\n    .ngb-dp-navigation-chevron::before {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.75em;\n      transform: rotate(-135deg);\n      -webkit-transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n      width: 0.75em;\n      margin: 0 0 0 0.5rem;\n    }\n    .ngb-dp-navigation-chevron.right:before {\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin: 0 0.5rem 0 0;\n    }\n  `],\n  template: `\n    <button type=\"button\" class=\"btn btn-sm btn-link\" (click)=\"!!doNavigate(navigation.PREV)\" [disabled]=\"prevDisabled()\" tabindex=\"-1\">\n      <span class=\"ngb-dp-navigation-chevron\"></span>\n    </button>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"d-block\" [style.width.rem]=\"months * 9\"\n      [date]=\"date\"\n      [minDate]=\"minDate\"\n      [maxDate]=\"maxDate\"\n      [disabled] = \"disabled\"\n      (select)=\"selectDate($event)\">\n    </ngb-datepicker-navigation-select>\n    <button type=\"button\" class=\"btn btn-sm btn-link\" (click)=\"!!doNavigate(navigation.NEXT)\" [disabled]=\"nextDisabled()\" tabindex=\"-1\">\n      <span class=\"ngb-dp-navigation-chevron right\"></span>\n    </button>\n  `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() maxDate: NgbDate;\n  @Input() minDate: NgbDate;\n  @Input() months: number;\n  @Input() showSelect: boolean;\n  @Input() showWeekNumbers: boolean;\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n, private _calendar: NgbCalendar) {}\n\n  doNavigate(event: NavigationEvent) { this.navigate.emit(event); }\n\n  nextDisabled() {\n    return this.disabled || (this.maxDate && this._calendar.getNext(this.date, 'm').after(this.maxDate));\n  }\n\n  prevDisabled() {\n    const prevDate = this._calendar.getPrev(this.date, 'm');\n    return this.disabled || (this.minDate && prevDate.year <= this.minDate.year && prevDate.month < this.minDate.month);\n  }\n\n  selectDate(date: NgbDate) { this.select.emit(date); }\n}\n"]}