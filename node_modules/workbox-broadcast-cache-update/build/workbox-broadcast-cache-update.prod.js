this.workbox=this.workbox||{},this.workbox.broadcastUpdate=function(t){"use strict";try{self.workbox.v["workbox:broadcast-cache-update:3.0.0-alpha.5"]=1}catch(t){}const e=(t,e,s)=>{return!s.some(s=>t.headers.has(s)&&e.headers.has(s))||s.every(s=>{const a=t.headers.has(s)===e.headers.has(s),c=t.headers.get(s)===e.headers.get(s);return a&&c})};var s={CACHE_UPDATED:"CACHE_UPDATED"};const a=(t,e,a,c)=>{t.postMessage({type:s.CACHE_UPDATED,meta:c,payload:{cacheName:e,updatedUrl:a}})};class c{constructor(t,{headersToCheck:e,source:s}={}){this.t=t,this.e=e||["content-length","etag","last-modified"],this.s=s||"workbox-broadcast-cache-update"}a(){return this.c||(this.c=new BroadcastChannel(this.t)),this.c}notifyIfUpdated(t,s,c,h){e(t,s,this.e)||a(this.a(),h,c,this.s)}}return t.BroadcastCacheUpdate=c,t.Plugin=class{constructor(t,e){this.h=new c(t,e)}cacheDidUpdate({cacheName:t,oldResponse:e,newResponse:s,url:a}){e&&this.h.notifyIfUpdated(e,s,t,a)}},t.broadcastUpdate=a,t.messageTypes=s,t}({});

//# sourceMappingURL=workbox-broadcast-cache-update.prod.js.map
